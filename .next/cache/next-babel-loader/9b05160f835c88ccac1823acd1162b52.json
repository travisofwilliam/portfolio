{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/traviswilliams/Desktop/portfolio/pages/videos.js\";\nimport YouTube from 'react-youtube';\n\nconst Videos = () => {\n  const videos = [{\n    title: 'Working with Response Objects',\n    id: 'JG1Bc-uj5jI',\n    desc: 'In this video, I teach you how to make a GET request to a public API using the Axios request library. Then, I show you how to understand the response object received as a result, plus how to access data from the response object and display said data inside of a view on the front end.'\n  }, {\n    title: 'How to Use the .filter() Array Prototype Method',\n    id: 'wTRX38Yh9pw',\n    desc: 'How to Use the .filter() Array Prototype Method in a Real Project (NextJS, ReactJS)'\n  }, {\n    title: 'Building a Chuck Norris Fact Generator',\n    id: '0FMymeLdPYI',\n    desc: 'In this video I build a Chuck Norris fact generator using the NextJS framework for ReactJS and the Axios promise-based library for HTTP requests.'\n  }, {\n    title: 'Building a Basic To-Do List With Next JS',\n    id: 'iEN3SAM3LbA',\n    desc: 'In this video, I walk through the process of building a simple To-Do List using the NextJS framework. It is meant to demonstrate the efficiency and ease of developing ReactJS applications with the NextJS framework.'\n  }];\n  const opts = {\n    height: '200px',\n    width: '17rem',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  const onReady = e => {\n    e.target.pauseVideo;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: '25px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: videos.map((video, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-4\",\n          style: {\n            width: '18rem',\n            border: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(YouTube, {\n            className: \"card-img-top\",\n            videoId: video.id,\n            opts: opts,\n            onReady: onReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: video.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: video.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Videos;","map":{"version":3,"sources":["/Users/traviswilliams/Desktop/portfolio/pages/videos.js"],"names":["YouTube","Videos","videos","title","id","desc","opts","height","width","playerVars","autoplay","onReady","e","target","pauseVideo","marginTop","textAlign","map","video","idx","border"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,eAApB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEnB,QAAMC,MAAM,GAAG,CACb;AACEC,IAAAA,KAAK,EAAE,+BADT;AAEEC,IAAAA,EAAE,EAAE,aAFN;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADa,EAMb;AACEF,IAAAA,KAAK,EAAE,iDADT;AAEEC,IAAAA,EAAE,EAAE,aAFN;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANa,EAWb;AACEF,IAAAA,KAAK,EAAE,wCADT;AAEEC,IAAAA,EAAE,EAAE,aAFN;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAXa,EAgBb;AACEF,IAAAA,KAAK,EAAE,0CADT;AAEEC,IAAAA,EAAE,EAAE,aAFN;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAhBa,CAAf;AAuBA,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,OADG;AAEXC,IAAAA,KAAK,EAAE,OAFI;AAGXC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHD,GAAb;;AASA,QAAMC,OAAO,GAAIC,CAAD,IAAO;AAAEA,IAAAA,CAAC,CAACC,MAAF,CAASC,UAAT;AAAqB,GAA9C;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,SAAS,EAAE;AAAhC,KAAlC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEId,MAAM,CAACe,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzB,4BACE;AAAe,UAAA,SAAS,EAAC,eAAzB;AAAyC,UAAA,KAAK,EAAE;AAAEX,YAAAA,KAAK,EAAE,OAAT;AAAkBY,YAAAA,MAAM,EAAE;AAA1B,WAAhD;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,cAAnB;AAAkC,YAAA,OAAO,EAAEF,KAAK,CAACd,EAAjD;AAAqD,YAAA,IAAI,EAAEE,IAA3D;AAAiE,YAAA,OAAO,EAAEK;AAA1E;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BO,KAAK,CAACf;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA0Be,KAAK,CAACb;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUc,GAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAzDD;;AA2DA,eAAelB,MAAf","sourcesContent":["import YouTube from 'react-youtube'\n\nconst Videos = () => {\n\n  const videos = [\n    {\n      title: 'Working with Response Objects',\n      id: 'JG1Bc-uj5jI',\n      desc: 'In this video, I teach you how to make a GET request to a public API using the Axios request library. Then, I show you how to understand the response object received as a result, plus how to access data from the response object and display said data inside of a view on the front end.'\n    },\n    {\n      title: 'How to Use the .filter() Array Prototype Method',\n      id: 'wTRX38Yh9pw',\n      desc: 'How to Use the .filter() Array Prototype Method in a Real Project (NextJS, ReactJS)'\n    },\n    {\n      title: 'Building a Chuck Norris Fact Generator',\n      id: '0FMymeLdPYI',\n      desc: 'In this video I build a Chuck Norris fact generator using the NextJS framework for ReactJS and the Axios promise-based library for HTTP requests.'\n    },\n    {\n      title: 'Building a Basic To-Do List With Next JS',\n      id: 'iEN3SAM3LbA',\n      desc: 'In this video, I walk through the process of building a simple To-Do List using the NextJS framework. It is meant to demonstrate the efficiency and ease of developing ReactJS applications with the NextJS framework.'\n    }\n  ]\n\n  const opts = {\n    height: '200px',\n    width: '17rem',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n    }\n  }\n\n  const onReady = (e) => { e.target.pauseVideo }\n\n  return (\n    <div className='container' style={{ marginTop: '25px', textAlign: 'center' }}>\n      <h1>Videos</h1>\n      <br />\n      <div className='row'>\n        {\n          videos.map((video, idx) => {\n            return (\n              <div key={idx} className=\"card col-md-4\" style={{ width: '18rem', border: 'none' }}>\n                <YouTube className='card-img-top' videoId={video.id} opts={opts} onReady={onReady} />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{video.title}</h5>\n                  <p className=\"card-text\">{video.desc}</p>\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Videos"]},"metadata":{},"sourceType":"module"}